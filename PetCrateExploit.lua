-- Pet Crate Exploit Script
-- Exploits the OpenPetCrate remote for maximum benefit

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Load Rayfield UI Library
local Rayfield
local rayfieldSuccess, rayfieldError = pcall(function()
    Rayfield = loadstring(game:HttpGet('https://limerbro.github.io/Roblox-Limer/rayfield.lua'))()
end)

if not rayfieldSuccess then
    warn("[PetCrateExploit] Failed to load Rayfield UI Library:", rayfieldError)
    -- Try backup URL
    local backupSuccess, backupError = pcall(function()
        Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/synnyyy/RobloxLua/main/Rayfield'))()
    end)
    
    if not backupSuccess then
        warn("[PetCrateExploit] Backup Rayfield also failed:", backupError)
        return
    end
end

-- Wait for Remotes safely
local OpenPetCrate
task.spawn(function()
    OpenPetCrate = ReplicatedStorage:WaitForChild("Remotes", 10):WaitForChild("OpenPetCrate", 10)
    if not OpenPetCrate then
        warn("[PetCrateExploit] OpenPetCrate remote not found")
    end
end)

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "üíé PET CRATE EXPLOIT üíé",
    Icon = 71338090068856,
    LoadingTitle = "üíé Loading Pet Crate Exploit...",
    LoadingSubtitle = "Maximum pet crate exploitation",
    Theme = "Ocean",
    ToggleUIKeybind = Enum.KeyCode.X,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "PetCrateExploit",
        FileName = "PetCrateExploitConfig"
    }
})

-- Exploit Tab
local ExploitTab = Window:CreateTab("üíé Exploit", "Diamond")

-- Variables
local isExploiting = false
local exploitCount = 0
local totalExploited = 0
local exploitSpeed = 1 -- How fast to exploit (1 = normal, 10 = 10x speed)

-- Exploit Settings
local exploitSettings = {
    -- Only get the best pets
    common = false,
    standard = false,
    cosmic = false,
    uncommon = false,
    rare = false,
    legendary = true,    -- Only legendary+
    epic = true,        -- Only epic+
    immortal = true,    -- Only immortal+
    godly = true        -- Only godly
}

-- Function to exploit pet crates
local function exploitPetCrate(crateId, quantity)
    if not OpenPetCrate then
        warn("[PetCrateExploit] OpenPetCrate remote not available")
        return false
    end
    
    local success, result = pcall(function()
        return OpenPetCrate:InvokeServer(
            crateId or 1, -- Crate ID
            exploitSettings, -- Only get best pets
            quantity or 1 -- Quantity
        )
    end)
    
    if success then
        exploitCount = exploitCount + 1
        totalExploited = totalExploited + 1
        return true
    else
        warn("[PetCrateExploit] Failed to exploit pet crate:", result)
        return false
    end
end

-- Exploit Settings Section
ExploitTab:CreateSection("üíé Exploit Settings")

-- Exploit Speed Slider
ExploitTab:CreateSlider({
    Name = "‚ö° Exploit Speed",
    Range = {1, 100},
    Increment = 1,
    Suffix = "x",
    CurrentValue = 1,
    Flag = "ExploitSpeed",
    Callback = function(Value)
        exploitSpeed = Value
        Rayfield:Notify({
            Title = "‚ö° EXPLOIT SPEED SET",
            Content = "Exploit speed: " .. Value .. "x",
            Duration = 2,
            Image = 4483362458
        })
    end
})

-- Crate ID Slider
ExploitTab:CreateSlider({
    Name = "üì¶ Crate ID",
    Range = {1, 50},
    Increment = 1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "CrateID",
    Callback = function(Value)
        Rayfield:Notify({
            Title = "üì¶ CRATE ID SET",
            Content = "Crate ID: " .. Value,
            Duration = 2,
            Image = 4483362458
        })
    end
})

-- Quantity Slider
ExploitTab:CreateSlider({
    Name = "üî¢ Quantity Per Open",
    Range = {1, 1000},
    Increment = 1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "Quantity",
    Callback = function(Value)
        Rayfield:Notify({
            Title = "üî¢ QUANTITY SET",
            Content = "Quantity per open: " .. Value,
            Duration = 2,
            Image = 4483362458
        })
    end
})

-- Exploit Section
ExploitTab:CreateSection("üöÄ Exploit Controls")

-- Exploit Count Display
local exploitCountLabel = ExploitTab:CreateLabel("üíé Exploited: 0 crates")
local totalCountLabel = ExploitTab:CreateLabel("üìà Total: 0 crates")

-- Update count labels
local function updateCounts()
    exploitCountLabel:Set("üíé Exploited: " .. exploitCount .. " crates")
    totalCountLabel:Set("üìà Total: " .. totalExploited .. " crates")
end

-- Ultra-Fast Exploit Toggle
ExploitTab:CreateToggle({
    Name = "üíé ULTRA-FAST EXPLOIT",
    CurrentValue = false,
    Flag = "UltraFastExploit",
    Callback = function(state)
        isExploiting = state
        if state then
            Rayfield:Notify({
                Title = "üíé ULTRA-FAST EXPLOIT STARTED",
                Content = "Exploiting pet crates at maximum speed...",
                Duration = 3,
                Image = 4483362458
            })
            
            -- Ultra-fast exploit loop
            task.spawn(function()
                while isExploiting do
                    pcall(function()
                        if OpenPetCrate then
                            -- Exploit multiple crates per frame
                            for i = 1, exploitSpeed do
                                local success = exploitPetCrate(1, 1) -- Use current settings
                                if success then
                                    updateCounts()
                                end
                            end
                        end
                    end)
                    
                    -- Minimal delay for maximum speed
                    task.wait(0.001) -- 1ms delay for ultra-fast exploitation
                end
            end)
        else
            Rayfield:Notify({
                Title = "üíé ULTRA-FAST EXPLOIT STOPPED",
                Content = "Stopped exploiting pet crates",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

-- Mass Exploit Toggle
ExploitTab:CreateToggle({
    Name = "üí• MASS EXPLOIT",
    CurrentValue = false,
    Flag = "MassExploit",
    Callback = function(state)
        if state then
            Rayfield:Notify({
                Title = "üí• MASS EXPLOIT STARTED",
                Content = "Mass exploiting pet crates...",
                Duration = 3,
                Image = 4483362458
            })
            
            -- Mass exploit loop
            task.spawn(function()
                while true do
                    pcall(function()
                        if OpenPetCrate then
                            -- Exploit with high quantity
                            local success = exploitPetCrate(1, 100) -- 100 crates per call
                            if success then
                                updateCounts()
                            end
                        end
                    end)
                    
                    task.wait(0.1) -- 100ms delay for mass exploitation
                end
            end)
        else
            Rayfield:Notify({
                Title = "üí• MASS EXPLOIT STOPPED",
                Content = "Stopped mass exploiting",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

-- Single Exploit Button
ExploitTab:CreateButton({
    Name = "üíé Single Exploit",
    Callback = function()
        if OpenPetCrate then
            local success = exploitPetCrate(1, 1)
            if success then
                updateCounts()
                Rayfield:Notify({
                    Title = "üíé SINGLE EXPLOIT SUCCESS",
                    Content = "Successfully exploited pet crate!",
                    Duration = 2,
                    Image = 4483362458
                })
            else
                Rayfield:Notify({
                    Title = "‚ùå EXPLOIT FAILED",
                    Content = "Failed to exploit pet crate",
                    Duration = 2,
                    Image = 4483362458
                })
            end
        else
            Rayfield:Notify({
                Title = "‚ùå REMOTE NOT FOUND",
                Content = "OpenPetCrate remote not available",
                Duration = 2,
                Image = 4483362458
            })
        end
    end
})

-- Reset Counts Button
ExploitTab:CreateButton({
    Name = "üîÑ Reset Counts",
    Callback = function()
        exploitCount = 0
        totalExploited = 0
        updateCounts()
        Rayfield:Notify({
            Title = "üîÑ COUNTS RESET",
            Content = "All counts have been reset",
            Duration = 2,
            Image = 4483362458
        })
    end
})

-- Advanced Exploit Section
ExploitTab:CreateSection("üî¨ Advanced Exploit")

-- Multi-Crate Exploit
ExploitTab:CreateButton({
    Name = "üíé Multi-Crate Exploit",
    Callback = function()
        Rayfield:Notify({
            Title = "üíé MULTI-CRATE EXPLOIT",
            Content = "Exploiting multiple crate types...",
            Duration = 3,
            Image = 4483362458
        })
        
        task.spawn(function()
            -- Exploit different crate types
            for crateId = 1, 10 do
                pcall(function()
                    if OpenPetCrate then
                        local success = exploitPetCrate(crateId, 10) -- 10 crates per type
                        if success then
                            updateCounts()
                        end
                    end
                end)
                task.wait(0.1) -- Small delay between crate types
            end
        end)
    end
})

-- Infinite Exploit
ExploitTab:CreateButton({
    Name = "‚ôæÔ∏è INFINITE EXPLOIT",
    Callback = function()
        Rayfield:Notify({
            Title = "‚ôæÔ∏è INFINITE EXPLOIT STARTED",
            Content = "Infinite pet crate exploitation...",
            Duration = 3,
            Image = 4483362458
        })
        
        task.spawn(function()
            while true do
                pcall(function()
                    if OpenPetCrate then
                        -- Infinite exploit loop
                        for i = 1, 50 do -- 50 crates per cycle
                            local success = exploitPetCrate(1, 1)
                            if success then
                                updateCounts()
                            end
                        end
                    end
                end)
                
                task.wait(0.01) -- 10ms delay for infinite exploitation
            end
        end)
    end
})

-- Load config
Rayfield:LoadConfiguration()
